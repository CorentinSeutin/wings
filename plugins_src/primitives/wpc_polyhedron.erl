%%
%%  wpc_polyhedron.erl --
%%
%%     Geodesic Dome Plugin
%%
%%  Copyright (c) 2003-2011 Anthony D'Agostino
%%
%%  See the file "license.terms" for information on usage and redistribution
%%  of this file, and for a DISCLAIMER OF ALL WARRANTIES.
%%
%%     $Id$
%%

-module(wpc_polyhedron).
-export([init/0, menu/2, command/2]).
-include_lib("wings/src/wings.hrl").

init() -> true.

menu({shape}, []) ->
    polyhedron_menu();
menu({shape}, Menu) ->
    Menu ++ [separator|polyhedron_menu()];
menu(_, Menu) -> Menu.

polyhedron_menu() ->
    [{?__(1,"polyhedron"), polyhedron, [option]}].

command({shape,{polyhedron, Arg}}, St) -> make_polyhedron(Arg, St);
command(_, _) -> next.

%%% The rest are local functions.

make_polyhedron(Arg, St) when is_atom(Arg) ->
    wings_dialog:dialog_preview({shape,polyhedron}, Arg, ?__(1,"Polyhedron Options"), dialog(), St);
make_polyhedron(Arg, _) ->
    ArgDict = dict:from_list(Arg),
    BaseFlag = dict:fetch(baseflag, ArgDict),
    TruncatedFlag = dict:fetch(truncatedflag, ArgDict),
    Rot_X = dict:fetch(rot_x, ArgDict),
    Rot_Y = dict:fetch(rot_y, ArgDict),
    Rot_Z = dict:fetch(rot_z, ArgDict),
    Mov_X = dict:fetch(mov_x, ArgDict),
    Mov_Y = dict:fetch(mov_y, ArgDict),
    Mov_Z = dict:fetch(mov_z, ArgDict),
    Ground = dict:fetch(ground, ArgDict),

    {Verts, Faces} = polyhedron_main(BaseFlag, TruncatedFlag),    
    Vs = wings_shapes:transform_obj({Rot_X,Rot_Y,Rot_Z},{Mov_X,Mov_Y,Mov_Z},Ground, Verts),
    Name = ?__(2,":polyhedron"),
    ObjName = [Name],
    {new_shape, ObjName, Faces, Vs}.

dialog() ->
    BaseFlag = get_pref(baseflag, tetrahedron),
    TruncatedFlag = get_pref(truncatedflag, false),

    [
        {hradio, [{?__(1,"Tetrahedron"), tetrahedron},
           {?__(2,"Hexahedron"), hexahedron},
	       {?__(3,"Octahedron"), octahedron},
	       {?__(4,"Icosahedron"), icosahedron},
           {?__(5,"Dodecahedron"), dodecahedron}],
	       BaseFlag,
	       [{key,baseflag}, {title, ?__(8,"Type")}]},

        {hradio, [{?__(9,"Yes"), true},
	       {?__(10,"No"), false}],
	       TruncatedFlag,
	       [{key,truncatedflag}, {title, ?__(11,"Truncated")}]},

     wings_shapes:transform_obj_dlg()
    ].

polyhedron_main(BaseFlag, TruncatedFlag) ->
    case BaseFlag of
	tetrahedron -> {Verts, Faces} = tetrahedron(TruncatedFlag);
	hexahedron -> {Verts, Faces} = hexahedron(TruncatedFlag);
	octahedron  -> {Verts, Faces} = octahedron(TruncatedFlag);
	icosahedron -> {Verts, Faces} = icosahedron(TruncatedFlag);
	dodecahedron -> {Verts, Faces} = dodecahedron(TruncatedFlag)
    end,
    {Verts, Faces}.


tetrahedron(false) ->
    Verts = [
    {0.0,0.47628967,0.0}, {0.0,-0.34020691,0.57735027}, 
    {-0.5,-0.34020691,-0.28867513}, {0.5,-0.34020691,-0.28867513}],
    Faces = [[0,2,1], [0,3,2], [1,3,0], [2,3,1]],
    {Verts,Faces};
tetrahedron(true) ->
    Verts = [{-0.5,-0.61237244,0.8660254}, {-1.0,-0.61237244,-math:exp(-08)}, {0.0,0.20412415,1.15470052}, 
    {-1.0,0.20412415,-0.57735029}, {0.0,1.02062073,0.57735024}, {-0.5,1.02062073,-0.28867516}, 
    {0.5,-0.61237244,0.86602537}, {-0.5,-0.61237244,-0.86602543}, {0.5,1.02062073,-0.28867517}, 
    {1.0,-0.61237244,-5*math:exp(-08)}, {0.5,-0.61237244,-0.86602546}, {1.0,0.20412415,-0.57735031}],
    Faces = [[0,2,4,5,3,1], [0,6,2], [1,7,10,9,6,0], [2,6,9,11,8,4], 
    [3,7,1], [4,8,5], [5,8,11,10,7,3], [10,11,9]],
    {Verts,Faces}.

hexahedron(false) ->
    Verts = [
    {-0.5,-0.5,-0.5}, {-0.5,-0.5,0.5}, {-0.5,0.5,-0.5}, 
    {-0.5,0.5,0.5}, {0.5,-0.5,-0.5}, {0.5,-0.5,0.5}, 
    {0.5,0.5,-0.5}, {0.5,0.5,0.5}],
    Faces = [[0,4,5,1], [1,3,2,0], [1,5,7,3], [2,6,4,0], 
    [3,7,6,2], [4,6,7,5]],
    {Verts,Faces};
hexahedron(true) ->
    Verts = [{-1.20710678,-1.20710678,-0.5}, {-1.20710678,-1.20710678,0.5}, {-1.20710678,-0.5,-1.20710678}, 
    {-1.20710678,-0.5,1.20710678}, {-1.20710678,0.5,-1.20710678}, {-1.20710678,0.5,1.20710678}, 
    {-1.20710678,1.20710678,-0.5}, {-1.20710678,1.20710678,0.5}, {-0.5,-1.20710678,-1.20710678}, 
    {-0.5,-1.20710678,1.20710678}, {-0.5,1.20710678,-1.20710678}, {-0.5,1.20710678,1.20710678}, 
    {0.5,-1.20710678,-1.20710678}, {0.5,-1.20710678,1.20710678}, {0.5,1.20710678,-1.20710678}, 
    {0.5,1.20710678,1.20710678}, {1.20710678,-1.20710678,-0.5}, {1.20710678,-1.20710678,0.5}, 
    {1.20710678,-0.5,-1.20710678}, {1.20710678,-0.5,1.20710678}, {1.20710678,0.5,-1.20710678}, 
    {1.20710678,0.5,1.20710678}, {1.20710678,1.20710678,-0.5}, {1.20710678,1.20710678,0.5}],
    Faces = [[0,8,12,16,17,13,9,1], [1,3,5,7,6,4,2,0], [1,9,3], [2,8,0], 
    [3,9,13,19,21,15,11,5], [4,10,14,20,18,12,8,2], [5,11,7], [6,10,4], 
    [7,11,15,23,22,14,10,6], [12,18,16], [14,22,20], 
    [16,18,20,22,23,21,19,17], [17,19,13], [21,23,15]],
    {Verts,Faces}.

octahedron(false) ->
    Verts = [{0.70710678,0.0,0.0}, {-0.70710678,0.0,0.0}, 
    {0.0,0.70710678,0.0}, {0.0,-0.70710678,0.0}, 
    {0.0,0.0,0.70710678}, {0.0,0.0,-0.70710678}],
    Faces = [[0,4,3], [0,5,2], [1,4,2], [1,5,3], 
    [2,4,0], [2,5,1], [3,4,1], [3,5,0]],
    {Verts,Faces};
octahedron(true) ->
    Verts = [{-1.5,-0.5,0.0}, {-1.5,0.5,0.0}, {-1.0,-1.0,-0.70710678}, 
    {-1.0,-1.0,0.70710678}, {-1.0,1.0,-0.70710678}, {-1.0,1.0,0.70710678}, 
    {-0.5,-1.5,0.0}, {-0.5,-0.5,-1.41421356}, {-0.5,-0.5,1.41421356}, 
    {-0.5,0.5,-1.41421356}, {-0.5,0.5,1.41421356}, {-0.5,1.5,0.0}, 
    {0.5,-1.5,0.0}, {0.5,-0.5,-1.41421356}, {0.5,-0.5,1.41421356}, 
    {0.5,0.5,-1.41421356}, {0.5,0.5,1.41421356}, {0.5,1.5,0.0}, 
    {1.0,-1.0,-0.70710678}, {1.0,-1.0,0.70710678}, {1.0,1.0,-0.70710678}, 
    {1.0,1.0,0.70710678}, {1.5,-0.5,0.0}, {1.5,0.5,0.0}],
    Faces = [[0,3,8,10,5,1], [1,4,9,7,2,0], [1,5,11,4], [2,6,3,0], 
    [2,7,13,18,12,6], [4,11,17,20,15,9], [6,12,19,14,8,3], [8,14,16,10], 
    [9,15,13,7], [10,16,21,17,11,5], [14,19,22,23,21,16], [15,20,23,22,18,13], 
    [17,21,23,20], [18,22,19,12]],
    {Verts,Faces}.

icosahedron(false) ->
    Verts = [{0.0,0.95105652,0.0}, {0.85065081,0.4253254,0.0}, {0.26286556,0.4253254,0.80901699}, 
    {-0.68819096,0.4253254,0.5}, {-0.68819096,0.4253254,-0.5}, {0.26286556,0.4253254,-0.80901699}, 
    {-0.85065081,-0.4253254,0.0}, {-0.26286556,-0.4253254,-0.80901699}, {0.68819096,-0.4253254,-0.5}, 
    {0.68819096,-0.4253254,0.5}, {-0.26286556,-0.4253254,0.80901699}, {0.0,-0.95105652,0.0}],
    Faces = [[0,2,1], [0,3,2], [0,4,3], [0,5,4], [1,5,0], [1,8,5], 
    [1,9,8], [2,9,1], [2,10,9], [3,10,2], [4,6,3], [4,7,6], [5,7,4], 
    [5,8,7], [6,10,3], [6,11,10], [7,11,6], [8,11,7], [9,11,8], [10,11,9]],
    {Verts,Faces};
icosahedron(true) ->
    Verts = [{-2.38949261,-0.5,-0.42532539}, {-2.38949261,0.5,-0.42532539}, {-2.22703266,-1.0,0.42532539}, 
    {-2.22703266,1.0,0.42532539}, {-2.06457291,-0.5,1.27597618}, {-2.06457291,0.5,1.27597618}, 
    {-1.96416721,-0.80901699,-1.27597618}, {-1.96416721,0.80901699,-1.27597618}, {-1.70130157,0.0,-1.80170727}, 
    {-1.63924751,-1.80901699,0.42532539}, {-1.63924751,1.80901699,0.42532539}, {-1.37638187,-1.61803398,-1.27597618}, 
    {-1.37638187,-1.0,1.80170727}, {-1.37638187,1.0,1.80170727}, {-1.37638187,1.61803398,-1.27597618}, 
    {-1.21392212,-2.11803398,-0.42532539}, {-1.21392212,2.11803398,-0.42532539}, {-1.11351633,-1.80901699,1.27597618}, 
    {-1.11351633,1.80901699,1.27597618}, {-0.85065079,0.0,-2.32743835}, {-0.68819094,-0.5,2.32743835}, 
    {-0.68819094,0.5,2.32743835}, {-0.52573113,-1.61803398,-1.80170727}, {-0.52573113,1.61803398,-1.80170727}, 
    {-0.26286557,-2.42705097,-0.42532539}, {-0.26286557,-0.80901699,-2.32743835}, {-0.26286557,0.80901699,-2.32743835}, 
    {-0.26286557,2.42705097,-0.42532539}, {-0.16245985,-2.11803398,1.27597618}, {-0.16245985,2.11803398,1.27597618}, 
    {0.16245985,-2.11803398,-1.27597618}, {0.16245985,2.11803398,-1.27597618}, {0.26286557,-2.42705097,0.42532539}, 
    {0.26286557,-0.80901699,2.32743835}, {0.26286557,0.80901699,2.32743835}, {0.26286557,2.42705097,0.42532539}, 
    {0.52573113,-1.61803398,1.80170727}, {0.52573113,1.61803398,1.80170727}, {0.68819094,-0.5,-2.32743835}, 
    {0.68819094,0.5,-2.32743835}, {0.85065079,0.0,2.32743835}, {1.11351633,-1.80901699,-1.27597618}, 
    {1.11351633,1.80901699,-1.27597618}, {1.21392212,-2.11803398,0.42532539}, {1.21392212,2.11803398,0.42532539}, 
    {1.37638187,-1.61803398,1.27597618}, {1.37638187,-1.0,-1.80170727}, {1.37638187,1.0,-1.80170727}, 
    {1.37638187,1.61803398,1.27597618}, {1.63924751,-1.80901699,-0.42532539}, {1.63924751,1.80901699,-0.42532539}, 
    {1.70130157,0.0,1.80170727}, {1.96416721,-0.80901699,1.27597618}, {1.96416721,0.80901699,1.27597618}, 
    {2.06457291,-0.5,-1.27597618}, {2.06457291,0.5,-1.27597618}, {2.22703266,-1.0,-0.42532539}, {2.22703266,1.0,-0.42532539}, 
    {2.38949261,-0.5,0.42532539}, {2.38949261,0.5,0.42532539}],
    Faces = [[0,2,4,5,3,1], [0,6,11,15,9,2], [1,7,8,6,0], [2,9,17,12,4], [3,10,16,14,7,1], 
    [4,12,20,21,13,5], [5,13,18,10,3], [7,14,23,26,19,8], [8,19,25,22,11,6], [10,18,29,35,27,16], 
    [11,22,30,24,15], [13,21,34,37,29,18], [15,24,32,28,17,9], [16,27,31,23,14], [17,28,36,33,20,12], 
    [19,26,39,38,25], [20,33,40,34,21], [23,31,42,47,39,26], [25,38,46,41,30,22], [27,35,44,50,42,31], 
    [29,37,48,44,35], [30,41,49,43,32,24], [32,43,45,36,28], [34,40,51,53,48,37], [36,45,52,51,40,33], 
    [39,47,55,54,46,38], [42,50,57,55,47], [43,49,56,58,52,45], [46,54,56,49,41], [48,53,59,57,50,44], 
    [52,58,59,53,51], [55,57,59,58,56,54]],
    {Verts,Faces}.

dodecahedron(false) -> 
    Verts = [{-0.5,0.0,1.30901699}, {0.5,0.0,1.30901699}, {-0.80901699,-0.80901699,-0.80901699}, 
    {-0.80901699,-0.80901699,0.80901699}, {-0.80901699,0.80901699,-0.80901699}, 
    {-0.80901699,0.80901699,0.80901699}, {0.80901699,-0.80901699,-0.80901699}, 
    {0.80901699,-0.80901699,0.80901699}, {0.80901699,0.80901699,-0.80901699}, 
    {0.80901699,0.80901699,0.80901699}, {1.30901699,0.5,0.0}, {1.30901699,-0.5,0.0}, 
    {-1.30901699,0.5,0.0}, {-1.30901699,-0.5,0.0}, {-0.5,0.0,-1.30901699}, {0.5,0.0,-1.30901699}, 
    {0.0,1.30901699,0.5}, {0.0,1.30901699,-0.5}, {0.0,-1.30901699,0.5}, {0.0,-1.30901699,-0.5}],
    Faces = [[0,3,18,7,1], [0,5,12,13,3], [1,9,16,5,0], [2,19,18,3,13], [4,17,8,15,14], 
    [6,15,8,10,11], [7,11,10,9,1], [8,17,16,9,10], [11,7,18,19,6], [12,5,16,17,4], 
    [13,12,4,14,2], [14,15,6,19,2]],
    {Verts,Faces};
dodecahedron(true) ->
    Verts = [{-2.91522369,-0.5,-0.26286557}, {-2.91522369,0.5,-0.26286557}, {-2.75276375,0.0,-1.11351633}, 
    {-2.65235806,-1.30901699,0.26286557}, {-2.65235806,1.30901699,0.26286557}, {-2.22703266,-1.61803398,1.11351633}, 
    {-2.22703266,0.0,-1.96416721}, {-2.22703266,1.61803398,1.11351633}, {-2.06457291,-2.11803398,0.26286557}, 
    {-2.06457291,2.11803398,0.26286557}, {-1.80170727,-1.30901699,1.96416721}, {-1.80170727,1.30901699,1.96416721}, 
    {-1.53884172,-0.5,-2.4898983}, {-1.53884172,-0.5,2.4898983}, {-1.53884172,0.5,-2.4898983}, {-1.53884172,0.5,2.4898983}, 
    {-1.37638187,-2.61803398,-0.26286557}, {-1.37638187,2.61803398,-0.26286557}, {-0.95105648,-1.30901699,-2.4898983}, 
    {-0.95105648,-1.30901699,2.4898983}, {-0.95105648,1.30901699,-2.4898983}, {-0.95105648,1.30901699,2.4898983}, 
    {-0.85065079,-2.61803398,-1.11351633}, {-0.85065079,2.61803398,-1.11351633}, {-0.68819094,-2.11803398,-1.96416721}, 
    {-0.68819094,2.11803398,-1.96416721}, {-0.42532539,-2.92705097,-0.26286557}, {-0.42532539,2.92705097,-0.26286557}, 
    {0.0,-1.61803398,-2.4898983}, {0.0,-1.61803398,2.4898983}, {0.0,1.61803398,-2.4898983}, {0.0,1.61803398,2.4898983}, 
    {0.42532539,-2.92705097,0.26286557}, {0.42532539,2.92705097,0.26286557}, {0.68819094,-2.11803398,1.96416721}, 
    {0.68819094,2.11803398,1.96416721}, {0.85065079,-2.61803398,1.11351633}, {0.85065079,2.61803398,1.11351633}, 
    {0.95105648,-1.30901699,-2.4898983}, {0.95105648,-1.30901699,2.4898983}, {0.95105648,1.30901699,-2.4898983}, 
    {0.95105648,1.30901699,2.4898983}, {1.37638187,-2.61803398,0.26286557}, {1.37638187,2.61803398,0.26286557}, 
    {1.53884172,-0.5,-2.4898983}, {1.53884172,-0.5,2.4898983}, {1.53884172,0.5,-2.4898983}, {1.53884172,0.5,2.4898983}, 
    {1.80170727,-1.30901699,-1.96416721}, {1.80170727,1.30901699,-1.96416721}, {2.06457291,-2.11803398,-0.26286557}, 
    {2.06457291,2.11803398,-0.26286557}, {2.22703266,-1.61803398,-1.11351633}, {2.22703266,0.0,1.96416721}, 
    {2.22703266,1.61803398,-1.11351633}, {2.65235806,-1.30901699,-0.26286557}, {2.65235806,1.30901699,-0.26286557}, 
    {2.75276375,0.0,1.11351633}, {2.91522369,-0.5,0.26286557}, {2.91522369,0.5,0.26286557}],
    Faces = [[0,3,5,10,13,15,11,7,4,1], [1,2,0], [1,4,9,17,23,25,20,14,6,2], [2,6,12,18,24,22,16,8,3,0], 
    [3,8,5], [6,14,12], [7,9,4], [7,11,21,31,35,37,33,27,17,9], [8,16,26,32,36,34,29,19,10,5], [10,19,13], 
    [13,19,29,39,45,47,41,31,21,15], [14,20,30,40,46,44,38,28,18,12], [15,21,11], [17,27,23], [18,28,24], 
    [22,26,16], [23,27,33,43,51,54,49,40,30,25], [24,28,38,48,52,50,42,32,26,22], [25,30,20], [31,41,35], 
    [32,42,36], [34,39,29], [35,41,47,53,57,59,56,51,43,37], [36,42,50,55,58,57,53,45,39,34], [37,43,33], 
    [40,49,46], [44,48,38], [45,53,47], [46,49,54,56,59,58,55,52,48,44], [51,56,54], [52,55,50], [58,59,57]],
    {Verts,Faces}.


get_pref(Key, Def) ->
    wpa:pref_get(?MODULE, Key, Def).
